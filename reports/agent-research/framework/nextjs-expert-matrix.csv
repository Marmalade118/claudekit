Category,Symptom/Error,Root Cause,Fix 1,Fix 2,Fix 3,Diagnostic Command,Validation Step,Official Link
App Router & Server Components,Error: Cannot use useState in Server Component,Using React hooks in Server Component,Add 'use client' directive at top of file,Move state logic to separate Client Component,Use Server Actions for state mutations,grep -r "useState\|useEffect" app/,Check for 'use client' directive,https://nextjs.org/docs/app/building-your-application/rendering/client-components
App Router & Server Components,Hydration mismatch error,Server/client rendering differences,Use dynamic import with ssr: false,Ensure consistent rendering logic,Use suppressHydrationWarning sparingly,Check browser dev tools console,Verify server and client render same content,https://nextjs.org/docs/messages/react-hydration-error
App Router & Server Components,Cannot access window/document in Server Component,Browser APIs used in server environment,Move browser API calls to useEffect,Use dynamic import for client-only components,Check typeof window !== 'undefined',grep -r "window\|document" app/,Test server-side rendering,https://nextjs.org/docs/app/building-your-application/rendering/client-components#moving-client-components-down-the-tree
App Router & Server Components,Bundle size too large,Entire app marked as Client Component,Move 'use client' to leaf components,Use Server Components for static content,Implement code splitting with dynamic imports,npx @next/bundle-analyzer,Check bundle size report,https://nextjs.org/docs/app/building-your-application/optimizing/bundle-analyzer
Server Components & Data Fetching,fetch() not working in component,Using fetch outside Server Component,Convert to async Server Component,Move fetch to data fetching function,Use SWR/React Query in Client Components,Check component is async function,Verify data loads on server render,https://nextjs.org/docs/app/building-your-application/data-fetching/fetching-caching-and-revalidating
Server Components & Data Fetching,Data not updating on page refresh,Aggressive caching preventing updates,Add cache: 'no-store' to fetch,Implement revalidation strategy,Use dynamic rendering with force-dynamic,curl -I http://localhost:3000/api/data,Check cache headers in response,https://nextjs.org/docs/app/building-your-application/data-fetching/fetching-caching-and-revalidating#opting-out-of-data-caching
Server Components & Data Fetching,Error: cookies() can only be called in Server Component,Using cookies in Client Component,Move cookie logic to Server Component,Pass cookie data as props,Use middleware for cookie handling,grep -r "cookies()" src/,Test cookie access in server context,https://nextjs.org/docs/app/api-reference/functions/cookies
Server Components & Data Fetching,Slow page loads with multiple API calls,Sequential data fetching,Use Promise.all for parallel requests,Implement data fetching at layout level,Use Suspense boundaries for streaming,Measure loading times in Network tab,Check waterfall in browser dev tools,https://nextjs.org/docs/app/building-your-application/data-fetching/patterns#parallel-data-fetching
Rendering Strategies,generateStaticParams not generating pages,Incorrect return format or function placement,Return array of param objects,Export function at page level,Check dynamic route naming,npx next build && ls .next/server/app,Verify static pages generated,https://nextjs.org/docs/app/api-reference/functions/generate-static-params
Rendering Strategies,Dynamic routes showing 404,Missing generateStaticParams or wrong config,Implement generateStaticParams function,Set dynamicParams = true for ISR,Check file naming convention,curl http://localhost:3000/your-route,Verify route responds correctly,https://nextjs.org/docs/app/building-your-application/routing/dynamic-routes
Rendering Strategies,ISR not revalidating content,Incorrect revalidate configuration,Set export const revalidate = seconds,Use next: { revalidate } in fetch,Implement on-demand revalidation,Check cache headers in response,Wait for revalidation period and check,https://nextjs.org/docs/app/building-your-application/data-fetching/incremental-static-regeneration
Rendering Strategies,Build failing with dynamic imports,Incorrect dynamic route structure,Check bracket naming in file system,Verify generateStaticParams format,Remove conflicting page/layout files,npx next build --debug,Review build output for errors,https://nextjs.org/docs/app/building-your-application/routing/dynamic-routes#generating-static-params
Performance & Core Web Vitals,Poor Largest Contentful Paint (LCP) score,Large unoptimized images or resources,Use next/image with priority prop,Implement resource preloading,Optimize critical rendering path,Lighthouse audit in Chrome DevTools,Check Core Web Vitals in PageSpeed Insights,https://nextjs.org/docs/app/building-your-application/optimizing/images
Performance & Core Web Vitals,Images not optimizing properly,Incorrect Image component usage,Specify width and height props,Use responsive sizes attribute,Configure custom image loader,Check Network tab for image formats,Verify WebP/AVIF formats served,https://nextjs.org/docs/app/api-reference/components/image
Performance & Core Web Vitals,High First Input Delay (FID),Too much client-side JavaScript,Reduce Client Component usage,Implement code splitting,Use Server Components for static content,Lighthouse performance audit,Test interaction responsiveness,https://nextjs.org/docs/app/building-your-application/rendering/client-components#moving-client-components-down-the-tree
Performance & Core Web Vitals,Cumulative Layout Shift (CLS) issues,Missing dimensions or dynamic content,Specify image dimensions,Reserve space for dynamic elements,Use font-display: swap,Visual inspection during page load,Measure CLS in Chrome DevTools,https://nextjs.org/docs/app/building-your-application/optimizing/fonts
API Routes & Full-Stack,Route Handler not found (404),Incorrect file structure or naming,Name file route.js/ts in app directory,Check HTTP method export (GET/POST),Verify route segment structure,curl http://localhost:3000/api/your-route,Check response status and content,https://nextjs.org/docs/app/building-your-application/routing/route-handlers
API Routes & Full-Stack,CORS errors in API routes,Missing CORS headers,Add CORS headers to response,Use cors middleware,Implement preflight handling,Check browser Network tab for CORS,Verify OPTIONS requests handled,https://nextjs.org/docs/app/building-your-application/routing/route-handlers#cors
API Routes & Full-Stack,API route timeout,Long-running operations,Implement request timeout,Use background job processing,Optimize database queries,Check serverless function logs,Monitor function execution time,https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config#maxduration
API Routes & Full-Stack,Database connection issues,Connection pooling or configuration,Configure connection pooling,Use database connection libraries,Implement connection retry logic,Check database logs,Test database connectivity,https://nextjs.org/docs/app/building-your-application/data-fetching/fetching-caching-and-revalidating#data-fetching-with-orms
Middleware & Authentication,Middleware not running on routes,Incorrect matcher configuration,Update matcher in config export,Check path patterns in matcher,Verify middleware file location,Check middleware logs,Test route matching manually,https://nextjs.org/docs/app/building-your-application/routing/middleware#matching-paths
Middleware & Authentication,Authentication redirect loops,Incorrect redirect logic,Check protected route arrays,Implement proper auth state checks,Add public route exclusions,Monitor redirect chain in browser,Verify auth flow works correctly,https://nextjs.org/docs/app/building-your-application/authentication#optimistic-checks-with-middleware
Middleware & Authentication,Session/cookie handling issues,Cookie configuration or parsing,Configure httpOnly and secure flags,Check cookie domain and path,Implement proper cookie parsing,Inspect cookies in browser dev tools,Test cookie persistence,https://nextjs.org/docs/app/api-reference/functions/cookies
Middleware & Authentication,Edge runtime compatibility,Using Node.js APIs in edge,Use Web APIs instead of Node.js,Move Node.js logic to serverless,Check runtime compatibility,Check edge function logs,Test edge deployment,https://nextjs.org/docs/app/api-reference/edge
Deployment & Production,Build failing on deployment,Environment or dependency issues,Check Node.js version compatibility,Verify all dependencies installed,Set proper environment variables,npx next build locally,Compare local vs deployment logs,https://nextjs.org/docs/app/building-your-application/deploying
Deployment & Production,Environment variables not accessible,Incorrect variable naming or setup,Prefix public vars with NEXT_PUBLIC_,Check variable spelling and case,Verify deployment platform config,echo $NEXT_PUBLIC_VAR_NAME,Test variable access in components,https://nextjs.org/docs/app/building-your-application/configuring/environment-variables
Deployment & Production,Static export failing,Dynamic features in static export,Use next build instead of export,Remove API routes for static export,Configure trailingSlash and images,npx next build && npx next export,Check export output directory,https://nextjs.org/docs/app/building-your-application/deploying/static-exports
Deployment & Production,Vercel deployment timeouts,Function execution time limits,Optimize function performance,Use Edge Runtime for faster startup,Implement request caching,Check Vercel function logs,Monitor function execution metrics,https://vercel.com/docs/functions/serverless-functions/runtimes
Advanced Features,Internationalization not working,Missing i18n configuration,Configure i18n in next.config.js,Implement locale routing,Add language detection,Check Accept-Language headers,Test different locale URLs,https://nextjs.org/docs/app/building-your-application/routing/internationalization
Advanced Features,Parallel routes not rendering,Incorrect slot structure,Check slot naming with @ prefix,Verify parallel route file structure,Implement default.js files,Inspect component tree in React DevTools,Test route combinations,https://nextjs.org/docs/app/building-your-application/routing/parallel-routes
Advanced Features,Intercepting routes not intercepting,Modal route configuration issues,Check route structure with (.) syntax,Implement proper fallback pages,Verify intercepting route placement,Test navigation patterns,Check route matching in browser,https://nextjs.org/docs/app/building-your-application/routing/intercepting-routes
Advanced Features,MDX integration issues,Incorrect MDX configuration,Configure @next/mdx properly,Check MDX file extensions,Implement MDX components,npx next build,Test MDX page rendering,https://nextjs.org/docs/app/building-your-application/configuring/mdx
Migration Issues,Pages Router patterns not working,Using old patterns in new structure,Convert to App Router patterns,Update data fetching methods,Migrate API routes to Route Handlers,Compare old vs new file structure,Test migrated functionality,https://nextjs.org/docs/app/building-your-application/upgrading/app-router-migration
Migration Issues,getServerSideProps not working in app,Using Pages Router API in App Router,Use Server Components with fetch,Convert to Route Handlers,Implement new caching strategies,Check for getServerSideProps usage,Test server-side data loading,https://nextjs.org/docs/app/building-your-application/upgrading/app-router-migration#migrating-from-pages-to-app
Migration Issues,API routes returning 404 after migration,Incorrect API route migration,Move to app/api directory structure,Export HTTP method functions,Update import paths,Test API endpoints individually,Verify route handler exports,https://nextjs.org/docs/app/building-your-application/routing/route-handlers
Migration Issues,Layout not persisting state,Layout remounting issues,Check layout file structure,Implement proper state management,Use React Context appropriately,Monitor component rerenders,Test navigation between pages,https://nextjs.org/docs/app/building-your-application/routing/layouts-and-templates