Category,Symptom/Error,Root Cause,Fix 1,Fix 2,Fix 3,Diagnostic Command,Validation Step,Official Link
Dockerfile Optimization,Build takes 10+ minutes,Poor layer caching and large build context,Add .dockerignore file,Use multi-stage builds,Cache package manager dependencies separately,docker build --no-cache .,docker history <image>,https://docs.docker.com/develop/dev-best-practices/#use-multi-stage-builds
Dockerfile Optimization,Image size over 1GB,Unnecessary files and dependencies,Use alpine or distroless base images,Remove build tools in same RUN command,Use multi-stage builds to separate build/runtime,docker images --format 'table {{.Repository}}\t{{.Tag}}\t{{.Size}}',docker history <image>,https://docs.docker.com/develop/dev-best-practices/#minimize-the-number-of-layers
Dockerfile Optimization,COPY invalidates cache frequently,Source code copied before dependencies,Copy package files first then install deps,Use .dockerignore to exclude changing files,Separate COPY commands by change frequency,docker build --progress=plain .,docker system df,https://docs.docker.com/develop/dev-best-practices/#leverage-build-cache
Security,Container runs as root user,Default USER not set in Dockerfile,Add non-root USER directive,Create user with specific UID/GID,Use security context in compose,docker exec <container> whoami,docker exec <container> id,https://docs.docker.com/engine/security/userns-remap/
Security,Secrets exposed in environment,Hardcoded secrets in Dockerfile/compose,Use Docker secrets or external secrets manager,Mount secrets as files not env vars,Use build-time secrets with --secret flag,docker inspect <container> | grep -i env,docker history <image> --no-trunc,https://docs.docker.com/engine/swarm/secrets/
Security,High/Critical CVEs in image,Outdated base image or packages,Update base image to latest version,Scan and patch vulnerable packages,Use distroless or minimal base images,docker scout cves <image>,docker scout quickview <image>,https://docs.docker.com/engine/security/
Docker Compose,Service dependency failures,Services start before dependencies ready,Use depends_on with condition,Implement health checks for dependencies,Add restart policies and timeouts,docker-compose ps,docker-compose logs <service>,https://docs.docker.com/compose/startup-order/
Docker Compose,Services cannot communicate,Missing or incorrect networking setup,Create custom Docker network,Use service names for communication,Configure proper port exposure,docker network ls,docker exec <container> nslookup <service>,https://docs.docker.com/compose/networking/
Docker Compose,Environment variables not working,Incorrect env file or variable syntax,Check .env file syntax and location,Use environment: syntax in compose,Verify variable substitution with config,docker-compose config,docker-compose exec <service> env,https://docs.docker.com/compose/environment-variables/
Networking,Port already in use error,Port conflict with host services,Change port mapping in compose/run,Use docker network for internal communication,Check and stop conflicting services,netstat -tulpn | grep <port>,docker port <container>,https://docs.docker.com/config/containers/container-networking/
Networking,DNS resolution failures,Service discovery not working,Use Docker networks instead of links,Ensure services in same network,Use service names not IP addresses,docker network inspect bridge,nslookup <service> from container,https://docs.docker.com/network/
Networking,Cannot access containerized app,Port not exposed or incorrect mapping,Add EXPOSE directive and port mapping,Check firewall and host networking,Verify application binds to 0.0.0.0,docker ps -a,curl localhost:<port> from host,https://docs.docker.com/config/containers/container-networking/
Performance,High memory usage,No resource limits set,Add memory limits to containers,Optimize application memory usage,Use swap accounting if needed,docker stats,docker inspect <container> | grep -i memory,https://docs.docker.com/config/containers/resource_constraints/
Performance,Container startup slow,Large image or slow initialization,Optimize Dockerfile and reduce image size,Use init system for proper signal handling,Implement health checks for readiness,docker run --rm <image> time,docker logs <container>,https://docs.docker.com/config/containers/resource_constraints/
Performance,Build context too large,Entire project copied to Docker daemon,Create comprehensive .dockerignore file,Use multi-stage builds,Optimize build context location,docker build --progress=plain .,du -sh . && docker system df,https://docs.docker.com/engine/reference/builder/#dockerignore-file
Volume Management,Data lost on container restart,Data stored in container filesystem,Use named volumes for persistent data,Mount host directories for development,Implement backup strategies for volumes,docker volume ls,docker inspect <container> | grep -i mounts,https://docs.docker.com/storage/volumes/
Volume Management,Permission denied on mounted volumes,Host/container user ID mismatch,Set correct USER in Dockerfile,Use --user flag in docker run,Fix host directory permissions,docker exec <container> ls -la /path,docker exec <container> id,https://docs.docker.com/storage/bind-mounts/
Volume Management,Volume mount not working,Incorrect path or volume syntax,Check volume mount syntax in compose,Verify host path exists and accessible,Use absolute paths for bind mounts,docker inspect <container> | grep -i volume,ls -la /host/path,https://docs.docker.com/storage/
Development Workflow,Hot reload not working,Source code not mounted or watched,Mount source directory as volume,Configure file watcher in container,Use nodemon or similar for auto-restart,docker exec <container> ls -la /app,docker logs <container>,https://docs.docker.com/storage/bind-mounts/
Development Workflow,Debugging container issues,Limited visibility into container state,Use docker exec for interactive debugging,Enable verbose logging in application,Use docker logs with timestamps,docker exec -it <container> /bin/sh,docker logs -f --timestamps <container>,https://docs.docker.com/engine/reference/commandline/logs/
Development Workflow,IDE cannot connect to container,Port or networking configuration,Expose necessary ports for IDE connection,Configure IDE to connect to container,Use remote development containers,docker port <container>,telnet localhost <port>,https://code.visualstudio.com/docs/remote/containers
Registry,Image push/pull failures,Authentication or network issues,Login to registry with docker login,Check network connectivity to registry,Verify image tag and repository name,docker login <registry>,docker pull <image>,https://docs.docker.com/engine/reference/commandline/login/
Registry,Image not found errors,Incorrect image tag or repository,Verify image name and tag syntax,Check if image exists in registry,Use fully qualified image names,docker search <image>,docker manifest inspect <image>,https://docs.docker.com/engine/reference/commandline/search/
Registry,Rate limiting errors,Too many requests to public registry,Use authenticated pulls for higher limits,Cache images in private registry,Implement retry logic with backoff,docker pull --quiet <image>,docker system events,https://docs.docker.com/docker-hub/download-rate-limit/
Health Checks,Container marked unhealthy,Health check failing,Review health check command and timeout,Ensure health endpoint returns 200,Adjust interval and retry settings,docker ps (shows health status),docker inspect <container> | grep -i health,https://docs.docker.com/engine/reference/builder/#healthcheck
Health Checks,Health check not running,Missing HEALTHCHECK directive,Add HEALTHCHECK instruction to Dockerfile,Implement health endpoint in application,Configure health check in compose,docker inspect <container> | grep -i healthcheck,docker exec <container> curl http://localhost/health,https://docs.docker.com/compose/compose-file/compose-file-v3/#healthcheck
Orchestration,Service scaling issues,Resource constraints or configuration,Check available system resources,Review service resource requirements,Use proper scaling commands,docker stats,docker service ls (Swarm) or kubectl get pods (K8s),https://docs.docker.com/engine/swarm/services/
Orchestration,Service discovery problems,Network or DNS configuration issues,Verify service mesh or network setup,Check service registration and health,Use proper service naming conventions,docker network inspect <network>,nslookup <service> from another container,https://docs.docker.com/engine/swarm/networking/